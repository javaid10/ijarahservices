package com.ijarah.services;

import com.emdha.esign.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.ijarah.utils.IjarahHelperMethods;
import com.ijarah.utils.ServiceCaller;
import com.ijarah.utils.enums.IjarahErrors;
import com.ijarah.utils.enums.StatusEnum;
import com.kony.dbputilities.util.HelperMethods;
import com.konylabs.middleware.common.JavaService2;
import com.konylabs.middleware.controller.DataControllerRequest;
import com.konylabs.middleware.controller.DataControllerResponse;
import com.konylabs.middleware.dataobject.Result;
import com.konylabs.middleware.dataobject.ResultToJSON;
import esign.text.pdf.codec.Base64;
import org.apache.log4j.Logger;

import javax.net.ssl.*;
import java.io.*;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import static com.ijarah.utils.ServiceCaller.auditLogData;
import static com.ijarah.utils.constants.OperationIDConstants.*;
import static com.ijarah.utils.constants.ServiceIDConstants.*;
import static com.ijarah.utils.enums.EnvironmentConfig.RKA_NAME;

public class EmdhaSign implements JavaService2 {

    Map<String, String> inputParams = new HashMap<>();
    private static final Logger LOG = Logger.getLogger(EmdhaSign.class);

    String NATIONAL_ID = "";
    String TYPE = "";
    String FULL_NAME = "";
    String AR_FULL_NAME = "";
    private String APPLICATION_ID = "";
    private String DOCUMENT = "";
    private String MOBILE = "";
    private String EMAIL = "";
    private String ADDRESS = "";
    private String CITY = "";
    private String DOCUMENT_ID = "";

    @Override

    public Object invoke(String s, Object[] objects, DataControllerRequest dataControllerRequest, DataControllerResponse dataControllerResponse) throws Exception {
        inputParams = HelperMethods.getInputParamMap(objects);
        Result result = StatusEnum.error.setStatus();
        IjarahErrors.ERR_PREPROCESS_INVALID_INPUT_PARAMS_001.setErrorCode(result);

        if (preProcess(inputParams)) {
            Result emdhaCustomerDetails = getEmdhaCustomerDetails(dataControllerRequest);
            if (HelperMethods.hasRecords(emdhaCustomerDetails)) {
                if (validateEmdhaDetails(emdhaCustomerDetails)) {
                    Result emdhaSignedDocument = getDocumentSignedByEmdha(createRequestForEmdhaService(dataControllerRequest), dataControllerRequest);
                    if (HelperMethods.hasRecords(emdhaSignedDocument)) {
                        Result getUpdateDocumentStorageData = updateDocumentStorageData(dataControllerRequest, "");
                        if (IjarahHelperMethods.hasSuccessCode(getUpdateDocumentStorageData)) {
                            Result successResult = StatusEnum.error.setStatus();
                            StatusEnum.success.setStatus(successResult);
                            successResult.addParam("Message", "Document has been signed by Emdha");
                            return successResult;
                        } else {
                            IjarahErrors.ERR_UPDATE_DOCUMENT_STORAGE_014.setErrorCode(result);
                        }
                    } else {
                        IjarahErrors.ERR_UNABLE_TO_SIGN_DOCUMENT_015.setErrorCode(result);
                    }
                } else {
                    IjarahErrors.ERR_PREPROCESS_INVALID_RESPONSE_PARAMS_001.setErrorCode(result);
                }
            } else {
                IjarahErrors.ERR_NO_DOCUMENT_STORAGE_RECORD_FOUND_017.setErrorCode(result);
            }
        }
        return result;
    }

    private boolean preProcess(Map<String, String> inputParams) {
        try {
            if (!inputParams.isEmpty()) {
                if (IjarahHelperMethods.isBlank(inputParams.get("type"))
                        || IjarahHelperMethods.isBlank(inputParams.get("nationalId"))) {
                    return false;
                } else {
                    NATIONAL_ID = inputParams.get("nationalId");
                    TYPE = inputParams.get("type");
                    return true;
                }
            } else {
                return false;
            }

        } catch (Exception ex) {
            LOG.error("ERROR preProcess :: " + ex);
        }
        return false;
    }

    private Result getEmdhaCustomerDetails(DataControllerRequest dataControllerRequest) {
        Result result = StatusEnum.error.setStatus();
        try {
            Map<String, String> inputParam = new HashMap<>();
            inputParam.put("nationalId", NATIONAL_ID);
            return ServiceCaller.internalDB(DB_MORA_SERVICES_SERVICE_ID, EMDHA_DETAILS_SP_GET_OPERATION_ID, inputParam, null, dataControllerRequest);
        } catch (Exception ex) {
            LOG.error("ERROR getCustomerData :: " + ex);
        }
        return result;
    }

    private boolean validateEmdhaDetails(Result emdhaCustomerDetails) {
        if (IjarahHelperMethods.isBlank(HelperMethods.getFieldValue(emdhaCustomerDetails, "uuid"))) {
            return false;
        }
        if (TYPE.equals("1")) {
            if (IjarahHelperMethods.isBlank(HelperMethods.getFieldValue(emdhaCustomerDetails, "loan_contract"))) {
                return false;
            }
            DOCUMENT = HelperMethods.getFieldValue(emdhaCustomerDetails, "loan_contract");
        } else {
            if (IjarahHelperMethods.isBlank(HelperMethods.getFieldValue(emdhaCustomerDetails, "promissory_note"))) {
                return false;
            }
            DOCUMENT = HelperMethods.getFieldValue(emdhaCustomerDetails, "promissory_note");
        }
        APPLICATION_ID = HelperMethods.getFieldValue(emdhaCustomerDetails, "currentAppId");
        FULL_NAME = HelperMethods.getFieldValue(emdhaCustomerDetails, "FullName");
        AR_FULL_NAME = HelperMethods.getFieldValue(emdhaCustomerDetails, "ArFullName");
        MOBILE = HelperMethods.getFieldValue(emdhaCustomerDetails, "mobile");
        EMAIL = HelperMethods.getFieldValue(emdhaCustomerDetails, "Value");
        ADDRESS = HelperMethods.getFieldValue(emdhaCustomerDetails, "addressLine1");
        CITY = HelperMethods.getFieldValue(emdhaCustomerDetails, "City_id");
        DOCUMENT = DOCUMENT.substring(2, DOCUMENT.length() - 1);
        DOCUMENT_ID = HelperMethods.getFieldValue(emdhaCustomerDetails, "uuid");

        return true;
    }

    private Map<String, String> createRequestForEmdhaService(DataControllerRequest dataControllerRequest) {
        Map<String, String> inputParams = new HashMap<>();
        inputParams.put("signedBy", FULL_NAME);
        inputParams.put("arabicName", AR_FULL_NAME);
        inputParams.put("mobile", MOBILE);
        inputParams.put("email", EMAIL);
        inputParams.put("address", ADDRESS);
        inputParams.put("regionProvince", CITY);
        inputParams.put("docBase64", DOCUMENT);
        inputParams.put("rkaName", RKA_NAME.getValue(dataControllerRequest));
        inputParams.put("kycId", NATIONAL_ID);
        inputParams.put("country", DOCUMENT);
        return inputParams;
    }

    private Result getDocumentSignedByEmdha(Map<String, String> inputParams, DataControllerRequest dataControllerRequest) {
        Result result = StatusEnum.error.setStatus();
        try {
            Result getEmdhaSignedDocument = ServiceCaller.internal(MS_DOCUMENT_MORA_SERVICE_ID, EMDHA_SIGN_OPERATION_ID, inputParams, null, dataControllerRequest);
            String inputRequest = (new ObjectMapper()).writeValueAsString(inputParams);
            String outputResponse = ResultToJSON.convert(getEmdhaSignedDocument);
            auditLogData(dataControllerRequest, inputRequest, outputResponse, MS_DOCUMENT_MORA_SERVICE_ID + " : " + EMDHA_SIGN_OPERATION_ID);
            return getEmdhaSignedDocument;
        } catch (Exception ex) {
            LOG.error("ERROR getDocumentSignedByEmdha :: " + ex);
        }
        return result;
    }

    private Result updateDocumentStorageData(DataControllerRequest dataControllerRequest, String signedDocument) {
        Result result = StatusEnum.error.setStatus();
        try {
            Map<String, String> inputParams = new HashMap<>();
            inputParams.put("uuid", DOCUMENT_ID);
            if (TYPE.equals("1")) {
                inputParams.put("loan_contract", signedDocument);
            } else {
                inputParams.put("promissory_note", signedDocument);
            }
            Result getDocumentStorageData = ServiceCaller.internalDB(DB_MORA_SERVICES_SERVICE_ID, DOCUMENT_STORAGE_UPDATE_OPERATION_ID, inputParams, null, dataControllerRequest);
            StatusEnum.success.setStatus(getDocumentStorageData);
            return getDocumentStorageData;
        } catch (Exception ex) {
            LOG.error("ERROR getCustomerData :: " + ex);
        }
        return result;
    }

    private String emdhaInit() {
        try {
            //Licence File
            String licenceFilePath = "/home/mora/EmdhaLicense/UAT-BFSI-IJARA01.lic";

            //SIP Certificate
            String pFXFilePath = "/home/mora/EmdhaLicense/ClientSDKDEV.pfx";
            String pFXPassword = "emdha";
            String pFXAlias = "fin";

            //SIP ID
            String SIPID = "UAT-BFSI-IJARA01"; // For NID

            //eSign URL
            String eSignURL = "https://esign-dev.emdha.sa/eSign/SignDoc";

            // Get Appearance Background Image in Base64 String
            String appearanceBackgroundImage = "";

            // Construct eSignEmdha Object
            LOG.error("Read Content of License file");
            LOG.error(Files.readAllBytes(Paths.get(licenceFilePath)));
            eSignEmdha eSign = new eSignEmdha(licenceFilePath, pFXFilePath, pFXPassword, pFXAlias, SIPID,
                    EmdhaSettings.LogType.AllLog);

            EmdhaSignerInfo signerInfo = new EmdhaSignerInfo("1.00", NATIONAL_ID, FULL_NAME, AR_FULL_NAME, "",
                    "", "", "الرياض", "SA", "");

            String signerInfox64 = signerInfo.getSignerInfoXMLBase64();

            EmdhaInput emdhaInput = new EmdhaInput(DOCUMENT, FULL_NAME, "IJARAH", "reason", true, eSignEmdha.PageTobeSigned.All,
                    eSignEmdha.Coordinates.BottomRight, eSignEmdha.AppearanceRunDirection.RUN_DIRECTION_LTR,
                    eSignEmdha.SignatureAppearanceType.EMDHA_LOGO, appearanceBackgroundImage);

            // Preapre a list of documents to be signed. Maximum 10 documents can be signed
            // in a single transaction.
            ArrayList<EmdhaInput> emdhaInputs = new ArrayList<>();

            emdhaInputs.add(emdhaInput);

            // Generate request XML to send to BTC. Maintain ServiceReturn in session for
            EmdhaServiceReturn serviceReturn = eSign.generateRequestXml(emdhaInputs, "", "Temp",
                    signerInfox64, NATIONAL_ID, true, true, eSignEmdha.KYCIdProvider.SELF_NID);

            if (serviceReturn.getStatus() != 1) {
                // handle error
                LOG.error("ERROR in Emdha Sign Service :: 1");
                return null;
            } else {
                String URLEncodedsignedRequestXML = URLEncoder.encode(serviceReturn.getRequestXML(), "UTF-8");

                // Post request XML to emdha CA and get response XML for signing completion
                String response = postXML(eSignURL, URLEncodedsignedRequestXML);


                // Pass ServiceReturn from session and response xml obtained from emdha in
                EmdhaServiceReturn eSignServiceReturn = eSign.getSignedDocuments(response, serviceReturn.getReturnValues());

                if (eSignServiceReturn.getStatus() == 1) {
                    ArrayList<ReturnDocument> returnDocuments = eSignServiceReturn.getReturnValues();
                    for (ReturnDocument returnDocument : returnDocuments) {

                        if (returnDocument.getErrorCode() == null) {
                            LOG.error("ERROR in Emdha Sign Service :: 2");
                            return null;
                        } else {
                            String pdfToBase64 = returnDocument.getSignedDocument();
                            if (pdfToBase64 == null) {
                                LOG.error("ERROR in Emdha Sign Service :: 3");
                                return null;
                            } else {
                                byte[] signedBytes = Base64.decode(pdfToBase64);
                                return Base64.encodeBytes(signedBytes);
                            }
                        }
                    }
                }
            }
        } catch (Exception ex) {
            LOG.error("ERROR in Emdha Sign Service :: 4");
            LOG.error(ex);
            return null;
        }
        LOG.error("ERROR in Emdha Sign Service :: 5");
        return null;
    }

    private static String postXML(String eSignURL, String requestXML) throws Exception {
        URL url = new URL(eSignURL);
        HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();

        SSLContext sslcontext = SSLContext.getInstance("TLSv1.2");
        sslcontext.init(new KeyManager[0], new TrustManager[]{new DummyTrustManager()}, new SecureRandom());
        SSLSocketFactory factory = sslcontext.getSocketFactory();

        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        connection.setRequestProperty("Content-Length", "" + requestXML.getBytes().length);
        connection.setRequestProperty("Content-Language", "en-US");
        connection.setUseCaches(false);
        connection.setDoInput(true);
        connection.setDoOutput(true);
        connection.setSSLSocketFactory(factory);
        connection.setHostnameVerifier(new DummyHostnameVerifier());

        try (DataOutputStream wr = new DataOutputStream(connection.getOutputStream())) {
            wr.writeBytes(requestXML);
            wr.flush();
        }
        InputStream is = connection.getInputStream();
        StringBuilder response;
        try (BufferedReader rd = new BufferedReader(new InputStreamReader(is))) {
            String line;
            response = new StringBuilder();
            while ((line = rd.readLine()) != null) {
                response.append(line).append("\r");
            }
        }
        return response.toString();
    }
}
